<?xml version="1.0"?>
<launch>

  <!-- to spawn the jackal robot model in the world you launched via gazebo.launch -->
  
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>   <!-- if you change this you will break the controller -->
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="output" default="screen"/>
  <arg name="world_name" default="world_0"/>  <!-- one of the worlds that are contained in the folder $(find jackal_3dmain)/worlds/ -->
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg output)"
  args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(find teb_planner_hj)/world/barn/$(arg world_name).world" />

  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="$(arg output)" args="$(arg command_arg3)"/>
  </group>
  
  <arg name="robot_name" default="jackal" />
  <arg name="robot_topic_prefix" default="" />  <!-- prefix for topics, must be with final slash -->
  <arg name="robot_frame_prefix" default="" />  <!-- prefix for frames, must be with final slash -->

  <arg name="robot_model" default="$(find jackal_description)/urdf/jackal.urdf.xacro"/>
  <arg name="use_rviz" default="true"/>  
  <arg name="node_start_delay" default="0.0" /> 

  <arg name="use_fake_localization" default="true"/>

  <arg name="x" default="-1.0" />
  <arg name="y" default="1.0" />
  <arg name="z" default="0.1" />
  <arg name="yaw" default="0" />

  <!-- Select only one among OS0, OS1, VPL16--> 
  <arg name="OS0" default="false" />
  <arg name="OS1" default="false" />
  <arg name="VLP16" default="false" />

  <arg name="imuRate" default="200" />
  <arg name="cameraRate" default="30" />

  <arg name="organize_cloud" default="false" />

  <!-- Load Jackal's description -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg robot_model)'
    robot_name:=$(arg robot_name)  
    robot_topic_prefix:=$(arg robot_topic_prefix)
    robot_frame_prefix:=$(arg robot_frame_prefix)  
    OS0:=$(arg OS0) OS1:=$(arg OS1) VLP16:=$(arg VLP16) 
    imuRate:=$(arg imuRate) 
    cameraRate:=$(arg cameraRate)
    organize_cloud:=$(arg organize_cloud)"/>
  
  <!-- Run state publisher -->  
  <node pkg="robot_state_publisher" 
    type="robot_state_publisher" name="robot_state_publisher_$(arg robot_name)">
    <!--remap from="robot_description" to="robot_description"/-->
    <!--remap from="/joint_states" to="/joint_states" /-->    
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Control -->
  <include file="$(find jackal_control)/launch/control.launch">
  </include>

  <!-- Run GT publisher as odom localization -->
  <include file="$(find odom2tf)/launch/odom2tf.launch" if="$(arg use_fake_localization)">
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="robot_topic_prefix" value="$(arg robot_topic_prefix)"/>
    <arg name="robot_frame_prefix" value="$(arg robot_frame_prefix)"/>
  </include>  

  <!-- Spawner for the gazebo sensor/robot -->
  <node pkg="gazebo_ros"
    type="spawn_model" name="spawn_robot_$(arg robot_name)" 
    args="-urdf -param robot_description -x $(arg x) -y $(arg y) -z $(arg z) -R 0 -P 0 -Y $(arg yaw) -model $(arg robot_name)"
    launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>

  <!-- Keyboard controller 
  <include file="$(find gazebo_utils)/launch/gazebo_ugv_teleop_keyboard.launch">
    <arg name="robot_name" value="$(arg robot_name)"/>          
    <arg name="robot_topic_prefix" value="$(arg robot_topic_prefix)"/>    
    <arg name="robot_frame_prefix" value="$(arg robot_frame_prefix)"/>    
  </include>
   -->
  <!-- Map Server-->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find teb_planner_hj)/map/barn/yaml_0.yaml" output="screen">
  </node>

  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 10">
  </node>

  <!-- Rviz -->
  <node if="$(arg use_rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find teb_planner_hj)/launch/includes/rviz_config/autoexplorer_small_envs.rviz" />

</launch>
